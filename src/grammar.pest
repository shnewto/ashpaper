
whitespace = _{ " " | "\t" }

goto = { "/" }
negate = { (!UPPERCASE_LETTER ~ character)+ ~ UPPERCASE_LETTER ~ character* }
multiply = { UPPERCASE_LETTER ~ (!UPPERCASE_LETTER ~ character)+ ~ not_character }
add = { "like" | "as" }
print = { "?" }
print_register = { "." }
pop = { "," }
push = { "-" }
store_syllables = { !explicit_rule ~ (character | whitespace) }

linebreak = _{
     LINE_SEPARATOR | PARAGRAPH_SEPARATOR | "\n" | "\r"
}

not_character = _{ !character ~ ANY }

character = _{ LETTER | MARK | NUMBER | PUNCTUATION | SYMBOL }

explicit_rule = _{
    goto 
    | negate 
    | multiply 
    | add 
    | print 
    | print_register
    | pop 
    | push 
}

wrapped_store_syllables = _{
    (store_syllables ~ whitespace*)+
}

wrapped_explicit_rule = _{
    ((explicit_rule|character+) ~ (character|whitespace)+)+
}

rule = {
    wrapped_store_syllables | wrapped_explicit_rule
}

register_one = {
    whitespace+ ~ rule
}

register_zero = {
    rule
}

line = {
    ((register_one | register_zero) ~ linebreak)
    | linebreak
}

program = { 
    SOI ~ line* ~ EOI
}
